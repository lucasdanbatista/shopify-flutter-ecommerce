### Schema ###

schema {
    query: Query

    mutation: Mutation
}

type Mutation {
    customerCreate(input: CustomerCreateInput!): CustomerCreatePayload!

    customerAccessTokenCreate(input: CustomerAccessTokenCreateInput!): CustomerAccessTokenCreatePayload!
}

type Query {
    productTags(first: Int!): StringConnection!

    products(query: String!, first: Int!): ProductConnection!

    product(id: ID!): Product!
}

### Models ###

type Product {
    id: String!

    title: String!

    description: String!

    images(first: Int!): ImageConnection!

    variants(first: Int!): ProductVariantConnection!
}

scalar Decimal

type MoneyV2 {
    amount: Decimal!
}

type ProductVariant {
    id: ID!

    compareAtPrice: MoneyV2!

    price: MoneyV2!
}

type ProductVariantConnection {
    nodes: [ProductVariant!]!
}

type ProductConnection {
    nodes: [Product!]!
}

type Customer {
    id: ID!
}

type CustomerAccessToken {
    accessToken: String!
}

type StringEdge {
    node: String!
}

type StringConnection {
    edges: [StringEdge!]!
}

type Image {
    url: String!
}

type ImageConnection {
    nodes: [Image!]!
}

### Inputs ###

input CustomerCreateInput {
    firstName: String!

    lastName: String!

    email: String!

    password: String!
}

input CustomerAccessTokenCreateInput {
    email: String!

    password: String!
}

### Payloads ###

type CustomerCreatePayload {
    customer: Customer!
}

type CustomerAccessTokenCreatePayload {
    customerAccessToken: CustomerAccessToken!
}
